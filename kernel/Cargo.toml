[package]
name = "delta_kernel"
description = "Core crate providing a Delta/Deltalake implementation focused on interoperability with a wide range of query engines."
documentation = "https://docs.rs/delta_kernel"
edition.workspace = true
homepage.workspace = true
license.workspace = true
repository.workspace = true
readme.workspace = true
version.workspace = true
# exclude golden tests + golden test data since they push us over 10MB crate size limit
exclude = ["tests/golden_tables.rs", "tests/golden_data/"]
rust-version.workspace = true

[package.metadata.docs.rs]
all-features = true

[package.metadata.release]
pre-release-replacements = [
  { file = "../README.md", search = "delta_kernel = \"[a-z0-9\\.-]+\"", replace = "delta_kernel = \"{{version}}\"" },
  { file = "../README.md", search = "version = \"[a-z0-9\\.-]+\"", replace = "version = \"{{version}}\"" },
]
pre-release-hook = [
  "git",
  "cliff",
  "--repository",
  "../",
  "--config",
  "../cliff.toml",
  "--unreleased",
  "--prepend",
  "../CHANGELOG.md",
  "--include-path",
  "*",
  "--tag",
  "{{version}}",
]

[dependencies]
delta_kernel_derive = { path = "../derive-macros", version = "0.12.1" }
bytes = "1.10"
chrono = "0.4.40"
indexmap = "2.9.0"
itertools = "0.14"
roaring = "0.10.12"
serde = { version = "1", features = ["derive", "rc"] }
serde_json = "1"
strum = { version = "0.27", features = ["derive"] }
thiserror = "2"
# only for structured logging
tracing = { version = "0.1", features = ["log"] }
url = "2"
uuid = { version = "1.16.0", features = ["v4", "fast-rng"] }
z85 = "3.0.6"

# optional deps
futures = { version = "0.3", optional = true }
# Used for fetching direct urls (like pre-signed urls)
reqwest = { version = "0.12.15", default-features = false, optional = true }
# optionally used with default engine (though not required)
tokio = { version = "1.44", optional = true, features = ["rt-multi-thread"] }

# arrow 54
[dependencies.arrow_54]
package = "arrow"
version = "54.3"
features = ["chrono-tz", "ffi", "json", "prettyprint"]
optional = true
[dependencies.parquet_54]
package = "parquet"
version = "54.3"
features = ["async", "object_store"]
optional = true
[dependencies.object_store_54]
package = "object_store"
version = "0.11"
features = ["aws", "azure", "gcp", "http"]
optional = true

# arrow 55
[dependencies.arrow_55]
package = "arrow"
version = "55"
features = ["chrono-tz", "ffi", "json", "prettyprint"]
optional = true
[dependencies.parquet_55]
package = "parquet"
version = "55"
features = ["async", "object_store"]
optional = true
[dependencies.object_store_55]
package = "object_store"
version = "0.12"
# features = ["aws", "azure", "gcp", "http"]
optional = true

[features]
# no default features
default = []
# internal-api will make everything marked #[internal_api] public
internal-api = []
# integration-test turns on a particularly heavy test for hdfs-object-store
integration-test = ["hdfs-native-object-store/integration-test"]

# The default versions for arrow/parquet/object_store
arrow = ["arrow-55"] # latest arrow version
need-arrow = [] # need-arrow is a marker that the feature needs arrow dep
arrow-54 = ["dep:arrow_54", "dep:parquet_54", "dep:object_store_54"]
arrow-55 = ["dep:arrow_55", "dep:parquet_55", "dep:object_store_55"]
arrow-conversion = ["need-arrow"]
arrow-expression = ["need-arrow"]

# this is an 'internal' feature flag which has all the shared bits from default-engine and
# default-engine-rustls
default-engine-base = [
  "arrow-conversion",
  "arrow-expression",
  "futures",
  "need-arrow",
  "tokio",
]
# the default-engine use the reqwest crate with default features which uses native-tls. if you want
# to instead use rustls, use 'default-engine-rustls' which has no native-tls dependency
default-engine = ["default-engine-base", "reqwest/default"]
default-engine-rustls = [
  "default-engine-base",
  "reqwest/rustls-tls-native-roots",
  "reqwest/http2",
]

[build-dependencies]
rustc_version = "0.4.1"

[dev-dependencies]
delta_kernel = { path = ".", features = ["arrow", "default-engine"] }
test_utils = { path = "../test-utils" }
# Used for testing parse_url_opts extensibility
hdfs-native-object-store = { version = "0.14.0" }
hdfs-native = "0.11.1"
walkdir = { version = "2.5.0" }
async-trait = "0.1" # only used for our custom SlowGetStore ObjectStore implementation
paste = "1.0"
test-log = { version = "0.2", default-features = false, features = ["trace"] }
tempfile = "3"
tar = "0.4"
zstd = "0.13"
tracing-subscriber = { version = "0.3", default-features = false, features = [
  "env-filter",
  "fmt",
] }
